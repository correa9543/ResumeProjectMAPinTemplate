import java.io.File;
import java.io.FileNotFoundException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Scanner;
import java.io.File;

public class ReviewSession {

    private Person person;
    private MAPinCoach coach;
    private ArrayList<String> actionVerbs;
    private Scanner actionInput;
    private ArrayList<String> months;


    public ReviewSession(){

    }

    public ReviewSession(MAPinCoach coach, Person person){
        this.coach = coach;
        this.person = person;
        actionVerbs = new ArrayList<>();

        try{
            actionInput = new Scanner(new File("Action Verbs.txt"));
        }catch(Exception e){
            System.out.println(e);
            System.out.println("Could not find the Action Verb files!!!");

        }

        while(actionInput.hasNextLine()){
            actionVerbs.add(actionInput.nextLine());
        }

        months = new ArrayList<>();

        months.add("January");
        months.add("February");
        months.add("March");
        months.add("April");
        months.add("May");
        months.add("June");
        months.add("July");
        months.add("August");
        months.add("September");
        months.add("October");
        months.add("November");
        months.add("December");

    }

    public  Person getPerson(){
        return person;
    }

    public MAPinCoach getCoach() {
        return coach;
    }

    public void startReviewSession(){
        System.out.println("---------------------------------------------------------------------");
        reviewObjStatement();
        reviewEduSection();
        reviewExpSection();
        reviewSkillsSection();
        reviewTrainingSection();

    }

    public void reviewObjStatement(){

        //The "counter" variable will keep track of how many suggestions we make in the Objective statement.
        int counter = 0;
        String objectiveStatement = person.getResume().getObjective().getStatement();
        System.out.println("******************************************************");
        System.out.println("\t\t  Objective Statement Suggestions");
        System.out.println("******************************************************");
        System.out.println("Your Objective Statement: " + objectiveStatement);

        if(!(objectiveStatement.contains("student"))){
            counter++;
            System.out.println(counter + ") " + coach.getSuggestions().getObjSuggElement(1));

        }

        if(!(objectiveStatement.contains("position"))){
            counter++;
            System.out.println(counter + ") " + coach.getSuggestions().getObjSuggElement(2));
        }

        if(!(objectiveStatement.contains("skills"))){
            counter++;
            System.out.println(counter + ") " + coach.getSuggestions().getObjSuggElement(4));
        }

        System.out.println(coach.getSuggestions().getObjSuggElement(5));
        System.out.println(coach.getSuggestions().getObjSuggElement(6));
        System.out.println();

    }

    public void reviewEduSection(){
        Education eduSection = person.getResume().getEducationSection();
        boolean svctePresent = false;
        int counter = 0;
        String svcteCase = " ";

        System.out.println("******************************************************");
        System.out.println("\t\t  Education Section Suggestions");
        System.out.println("******************************************************");

        System.out.println("Your education section: ");
        for(int i = 0; i < eduSection.getSchools().size(); i++){
            System.out.println(eduSection.getSchools().get(i));
        }

        System.out.println();

        //Some of this code might be redundant. Take another look at it.
        for(int i = 0; i < eduSection.getSchools().size(); i++){
            if(eduSection.getSchoolElement(i).getName().equalsIgnoreCase(("Silicon Valley Career Technical Education"))){
                svctePresent = true;
                svcteCase = "Silicon Valley Career Technical Education";
                break;
            }
            else if(eduSection.getSchoolElement(i).getName().equalsIgnoreCase(("SVCTE"))){
                svctePresent = true;
                svcteCase = "SVCTE";
                break;
            }

        }

        if((svcteCase.equalsIgnoreCase("Silicon Valley Career Technical Education")) || (svcteCase.equalsIgnoreCase("SVCTE")) ){
            counter++;
            if(svcteCase.equalsIgnoreCase("SVCTE")) {
                System.out.println(counter + ") " + coach.getSuggestions().getEduSuggElement(1));
            }

        }
        else{
            counter++;
            System.out.println(counter + ") " + coach.getSuggestions().getEduSuggElement(0));
        }

    }

    public void reviewExpSection(){

        //This variable will hold the first word for each duty listed
        String firstWord = "";

        //This variable is used to find the first word in each duty listed.
        int space = 0;

        //This variable keeps track of how many suggestions are made.
        int suggestionCounter = 0;

        //This counter is used to see how many duties begin with an action verb
        int counter = 0;

        //This variable will be used later to hold the number of duties that are listed.
        int dutySize = 0;

        //This variable will hold the first letter of the month listed as the beginning month.
        //It is used to check if the month is capitalized or not.
        char monthChar = ' ';

        //This variable is holding the number of occupations that are listed.
        int occupationSize = person.getResume().getExperienceSection().getOccupations().size();

        //This is a new reference variable that will be used to point to the list of duties provided by the student.
        //I created this reference to avoid typing ling lines of code. See line 85 and 89 for examples.
        ArrayList<String> duties;

        System.out.println("******************************************************");
        System.out.println("\t\t     Experience Suggestions");
        System.out.println("******************************************************");
        System.out.println("Your experience section: ");

        //Printing the students experience section
        for(int i = 0; i < occupationSize; i++){
            duties = person.getResume().getExperienceSection().getOccupationElement(i).getDuties();
            System.out.println(person.getResume().getExperienceSection().getOccupationElement(i));

            for(int j = 0; j < duties.size(); j++){
                System.out.println( "* " + duties.get(j));
            }
            System.out.println();
        }


        monthChar = person.getResume().getExperienceSection().getOccupationElement(0).getMonthStarted().charAt(0);
        if(Character.isLowerCase(monthChar)){
            suggestionCounter++;
            System.out.println(suggestionCounter + ") " + coach.getSuggestions().getExpSuggElement(1));

        }


        for(int i = 0; i < occupationSize; i++){
            duties = person.getResume().getExperienceSection().getOccupationElement(i).getDuties();
            dutySize = person.getResume().getExperienceSection().getOccupationElement(i).getDuties().size();


            for(int j = 0; j < dutySize; j++){
                space = duties.get(j).indexOf(" ");
                firstWord = duties.get(j).substring(0, space);

                if(actionVerbs.contains(firstWord)){
                    counter++;
                }


            }
        }


        if(counter < 3){
            suggestionCounter++;
            System.out.println(suggestionCounter +") " + coach.getSuggestions().getExpSuggElement(0));
        }

    }

    public void reviewSkillsSection(){

        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println();
        System.out.println("Still haven't reviewed skills section...");

    }

    public void reviewTrainingSection(){
        System.out.println("Still haven't reviewed training section...");

    }

    public ArrayList<String> getActionVerbs(){
        return actionVerbs;
    }

    public ArrayList<String> getMonths(){
        return months;
    }
}
