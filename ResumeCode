import jdk.swing.interop.SwingInterOpUtils;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

public class ResumeCode {
    public static void main(String[] args) {

        //This variable will hold the contact information of the student
        String [] personInfo = new String[4];

        //This variable will be used to hold each line of the file.
        String line = " ";

        //This viable will be used to read the file line by line
        Scanner input;

        School school;

        try {

            //Setting the "input" variable to read from the file named "resume.txt"
            input = new Scanner(new File("resume.txt"));

            //This for loop will grab the first four lines of the file.
            for(int i = 0; i < 4; i++){

                //Grabbing the next line from the file.
                line = input.nextLine();

                //Storing the line into the "personInfo" variable
                personInfo[i] = line;

            }

            Person person = new Person(personInfo);

            System.out.println(person.getName());
            System.out.println(person.getCityAndState());
            System.out.println(person.getPhoneNumber());
            System.out.println(person.getEmail());



            //This while loop will be used to read the rest of the file
            //This loop while loop will run as long as it hasn't reached the end of the file.
            while(input.hasNextLine()){

                //Storing the next line of the file into the "line" variable
                line = input.nextLine();

                //If the line equals "objective" then go into the if statement
                if((line.equalsIgnoreCase("OBJECTIVE"))){

                    System.out.println();
                    System.out.println(line);


                    //The "statement" variable will hold the objective statement.
                   String statement = input.nextLine();

                   //Creating a new "ObjectiveStatement" object.
                    ObjectiveStatement objective = new ObjectiveStatement(statement);


                    System.out.println(objective.getStatement());

                    System.out.println();


                    //*****************************************************************
                    // Review the objective statement;
                    //*****************************************************************

                }

                if(line.equalsIgnoreCase("Education")){

                    Education edu = new Education();

                    System.out.println(line);

                    //turn this block into a loop. While loop?
                    line = input.nextLine();
                    String monthAndYear = input.nextLine();
                    edu.addSchool(createSchoolObj(line, monthAndYear));
                    line = input.nextLine();
                    monthAndYear = input.nextLine();
                    edu.addSchool(createSchoolObj(line, monthAndYear));
                    System.out.println(edu.getSchools().get(0));
                    System.out.println(edu.getSchools().get(1));

                    System.out.println();
                }

                if(line.equalsIgnoreCase("Experience")){

                    String[] duties = new String[3];
                    Experience exp = new Experience();

                    System.out.println("Experience");

                    line = input.nextLine();
                    String monthAndYear = input.nextLine();

                    for(int i = 0; i < 3; i++){
                        duties[i] = input.nextLine();
                    }

                    //Whatever object gets returned from the "createOccupationObject"
                    // will get added to the list of occupations
                    exp.addOccupation(createOccupationObject(line, monthAndYear, duties));
                    System.out.println(exp.getOccupations().get(0));
                    System.out.println(exp.getOccupationElement(0).getDutyElement(0));
                    System.out.println(exp.getOccupationElement(0).getDutyElement(1));
                    System.out.println(exp.getOccupationElement(0).getDutyElement(2));


                    System.out.println();
                }

                if(line.equalsIgnoreCase("Skills")){
                    System.out.println(line);
                    String [] skillList = new String[4];

                    for(int i = 0; i < 4; i++){
                        skillList[i] = input.nextLine();
                    }

                    Skills skillsObj = new Skills(skillList);

                    for(int i = 0; i < skillList.length; i++) {
                        System.out.println(skillsObj.getSkill(i));
                    }
                    System.out.println();
                }

                if(line.equalsIgnoreCase("Training")){
                    System.out.println(line);

                    String [] listOfTrainings = new String[4];

                   for(int i = 0; i < 4; i++){
                       listOfTrainings[i] = input.nextLine();
                   }

                   Training trainingObj = new Training(listOfTrainings);

                   for(int i = 0; i < listOfTrainings.length; i++){
                       System.out.println(trainingObj.getElementOfTrainingList(i));
                   }

                }

            }


        }catch(FileNotFoundException e){
            System.out.println("Could not find the resume text file! \nException: " + e);
        }


    }

    private static School createSchoolObj(String line, String monthsAndYears){
        int comma;
        int dash;
        int space;
        String schoolName;
        String location;
        String degree;
        String startingMonth;
        String startingYear;
        String endingMonth;
        String endingYear;


        comma = line.indexOf(",");
        dash = line.indexOf("-");
        schoolName = line.substring(0, comma);
        location = line.substring(comma+2, dash-1);
        degree = line.substring(dash+2);
        dash = monthsAndYears.indexOf("-");
        space = monthsAndYears.indexOf(" ");
        int space2 = monthsAndYears.indexOf(" ",dash + 2);
        startingMonth = monthsAndYears.substring(0,space);
        startingYear = monthsAndYears.substring(space + 1,dash - 1);
        endingMonth = monthsAndYears.substring(dash + 2 ,space2);

        if(endingMonth.equalsIgnoreCase("Present" )){

            //Left off here.
            return (new School(schoolName, location, degree, startingMonth, startingYear, startingMonth));


        }
        else {
            endingYear = monthsAndYears.substring(space2 + 1);

//            System.out.println(schoolName + ", " + location + " - " + degree);
//            System.out.println(startingMonth + startingYear + endingMonth + endingYear);
            return (new School(schoolName, location, degree, startingMonth, startingYear, endingMonth, endingYear));
        }

    }

    private static Occupation createOccupationObject(String line, String monthsAndYears, String[] duties){
        int comma;
        int dash;
        int space;
        int space2;
        String companyName;
        String location;
        String jobTitle;
        String startingMonth;
        String startingYear;
        String endingMonth;
        String endingYear;

       // System.out.println(line);
        //System.out.println(monthsAndYears);

        comma = line.indexOf(",");
        dash = line.indexOf("-");
        companyName = line.substring(0,comma);
        location = line.substring(comma + 2, dash - 1);
        jobTitle = line.substring(dash + 2);
        space = monthsAndYears.indexOf(" ");
        dash = monthsAndYears.indexOf("-");
        space2 = monthsAndYears.indexOf(" ", dash + 1);
        startingMonth = monthsAndYears.substring(0,space);
        startingYear = monthsAndYears.substring(space + 1, dash - 1);
        endingMonth = monthsAndYears.substring(dash + 2);


        return (new Occupation(companyName, location, jobTitle, startingMonth, startingYear, endingMonth, duties));
    }


}
